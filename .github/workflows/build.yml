name: Build and publish image to ghcr.io/epics-containers

on:
  push:
  pull_request:

jobs:
  build:
    # pull requests are a duplicate of a branch push if within the same repo.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        epics-target: [linux-x86_64] # , linux-aarch64]
        include:
          - os: ubuntu-latest # everyone is on ubuntu-latest
          - epics-target: linux-x86_64
            extension: ""
            platform: linux/amd64

          # # a temporary name until multi-arch is supported
          # - epics-target: linux-aarch64
          #     extension: -native-aarch64
          #     platform: linux/arm64

    runs-on: ${{ matrix.os }}
    env:
      TAG: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}${{ matrix.extension }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          target: runtime
          build-args: |
            IMAGE_EXT=${{ matrix.extension }}
          cache-from: type=gha,scope=${{ matrix.epics-target }}
          cache-to: type=gha,mode=max,scope=${{ matrix.epics-target }}
          tags: ci_test
          load: true

      - name: Test image
        # can't test non native without some hardware to run on
        if: ${{ matrix.epics-target == 'linux-x86_64' }}
        run: tests/run-tests.sh ci_test

      - name: Push developer image
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          target: developer
          build-args: |
            IMAGE_EXT=${{ matrix.extension }}
          tags: ${{ env.TAG }}-developer:${{ github.ref_name }}
          push: true

      - name: Push runtime image
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          target: runtime
          build-args: |
            IMAGE_EXT=${{ matrix.extension }}
          tags: ${{ env.TAG }}-runtime:${{ github.ref_name }}
          push: true

  release:
    # Release on tag push - publish ioc schema
    needs: [build]
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    runs-on: ubuntu-latest

    # this job runs in the native developer container we just made
    container:
      image: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-developer:${{ github.ref_name }}

    steps:
      - name: generate-schema
        run: |
          ibek ioc generate-schema --output ibek.ioc.schema.json

      - name: Github Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          files: |
            ibek.ioc.schema.json
          generate_release_notes: true
